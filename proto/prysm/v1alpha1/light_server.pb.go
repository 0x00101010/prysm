// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.8
// source: proto/prysm/v1alpha1/light_server.proto

package eth

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/prysmaticlabs/prysm/proto/eth/ext"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetBestUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPeriod uint64 `protobuf:"varint,1,opt,name=from_period,json=fromPeriod,proto3" json:"from_period,omitempty"`
	ToPeriod   uint64 `protobuf:"varint,2,opt,name=to_period,json=toPeriod,proto3" json:"to_period,omitempty"`
}

func (x *GetBestUpdatesRequest) Reset() {
	*x = GetBestUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_prysm_v1alpha1_light_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBestUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestUpdatesRequest) ProtoMessage() {}

func (x *GetBestUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_prysm_v1alpha1_light_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestUpdatesRequest.ProtoReflect.Descriptor instead.
func (*GetBestUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_proto_prysm_v1alpha1_light_server_proto_rawDescGZIP(), []int{0}
}

func (x *GetBestUpdatesRequest) GetFromPeriod() uint64 {
	if x != nil {
		return x.FromPeriod
	}
	return 0
}

func (x *GetBestUpdatesRequest) GetToPeriod() uint64 {
	if x != nil {
		return x.ToPeriod
	}
	return 0
}

type LightClientUpdates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*LightClientUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *LightClientUpdates) Reset() {
	*x = LightClientUpdates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_prysm_v1alpha1_light_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightClientUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightClientUpdates) ProtoMessage() {}

func (x *LightClientUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_proto_prysm_v1alpha1_light_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightClientUpdates.ProtoReflect.Descriptor instead.
func (*LightClientUpdates) Descriptor() ([]byte, []int) {
	return file_proto_prysm_v1alpha1_light_server_proto_rawDescGZIP(), []int{1}
}

func (x *LightClientUpdates) GetUpdates() []*LightClientUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type LightClientUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestedHeader          *BeaconBlockHeader `protobuf:"bytes,1,opt,name=attested_header,json=attestedHeader,proto3" json:"attested_header,omitempty"`
	NextSyncCommittee       *SyncCommittee     `protobuf:"bytes,2,opt,name=next_sync_committee,json=nextSyncCommittee,proto3" json:"next_sync_committee,omitempty"`
	NextSyncCommitteeBranch [][]byte           `protobuf:"bytes,3,rep,name=next_sync_committee_branch,json=nextSyncCommitteeBranch,proto3" json:"next_sync_committee_branch,omitempty" ssz-size:"5,32"`
	FinalityHeader          *BeaconBlockHeader `protobuf:"bytes,4,opt,name=finality_header,json=finalityHeader,proto3" json:"finality_header,omitempty"`
	FinalityBranch          [][]byte           `protobuf:"bytes,5,rep,name=finality_branch,json=finalityBranch,proto3" json:"finality_branch,omitempty" ssz-size:"6,32"`
	SyncAggregate           *SyncAggregate     `protobuf:"bytes,6,opt,name=sync_aggregate,json=syncAggregate,proto3" json:"sync_aggregate,omitempty"`
	ForkVersion             []byte             `protobuf:"bytes,7,opt,name=fork_version,json=forkVersion,proto3" json:"fork_version,omitempty" ssz-size:"4"`
}

func (x *LightClientUpdate) Reset() {
	*x = LightClientUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_prysm_v1alpha1_light_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightClientUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightClientUpdate) ProtoMessage() {}

func (x *LightClientUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_prysm_v1alpha1_light_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightClientUpdate.ProtoReflect.Descriptor instead.
func (*LightClientUpdate) Descriptor() ([]byte, []int) {
	return file_proto_prysm_v1alpha1_light_server_proto_rawDescGZIP(), []int{2}
}

func (x *LightClientUpdate) GetAttestedHeader() *BeaconBlockHeader {
	if x != nil {
		return x.AttestedHeader
	}
	return nil
}

func (x *LightClientUpdate) GetNextSyncCommittee() *SyncCommittee {
	if x != nil {
		return x.NextSyncCommittee
	}
	return nil
}

func (x *LightClientUpdate) GetNextSyncCommitteeBranch() [][]byte {
	if x != nil {
		return x.NextSyncCommitteeBranch
	}
	return nil
}

func (x *LightClientUpdate) GetFinalityHeader() *BeaconBlockHeader {
	if x != nil {
		return x.FinalityHeader
	}
	return nil
}

func (x *LightClientUpdate) GetFinalityBranch() [][]byte {
	if x != nil {
		return x.FinalityBranch
	}
	return nil
}

func (x *LightClientUpdate) GetSyncAggregate() *SyncAggregate {
	if x != nil {
		return x.SyncAggregate
	}
	return nil
}

func (x *LightClientUpdate) GetForkVersion() []byte {
	if x != nil {
		return x.ForkVersion
	}
	return nil
}

var File_proto_prysm_v1alpha1_light_server_proto protoreflect.FileDescriptor

var file_proto_prysm_v1alpha1_light_server_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x65, 0x78, 0x74, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x42, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x22, 0x58, 0x0a, 0x12, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x80, 0x04, 0x0a, 0x11,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x51, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x52, 0x11, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x12, 0x45, 0x0a, 0x1a, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x08,
	0x8a, 0xb5, 0x18, 0x04, 0x35, 0x2c, 0x33, 0x32, 0x52, 0x17, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x51, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x08, 0x8a,
	0xb5, 0x18, 0x04, 0x36, 0x2c, 0x33, 0x32, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x4b, 0x0a, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x8a, 0xb5, 0x18, 0x01,
	0x34, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xd5,
	0x03, 0x0a, 0x12, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x65, 0x74, 0x68, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x65, 0x73, 0x74, 0x12, 0x91, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x28, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2d, 0x12, 0x2b, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x2d, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x95,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22,
	0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2d, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x2d, 0x75, 0x6e, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x93, 0x01, 0x0a, 0x19, 0x6f, 0x72, 0x67, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x42, 0x0b, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x72, 0x79, 0x73, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x70, 0x72,
	0x79, 0x73, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x65, 0x74, 0x68, 0xaa, 0x02, 0x15, 0x45,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x45, 0x74, 0x68, 0x2e, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x15, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5c,
	0x45, 0x74, 0x68, 0x5c, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_prysm_v1alpha1_light_server_proto_rawDescOnce sync.Once
	file_proto_prysm_v1alpha1_light_server_proto_rawDescData = file_proto_prysm_v1alpha1_light_server_proto_rawDesc
)

func file_proto_prysm_v1alpha1_light_server_proto_rawDescGZIP() []byte {
	file_proto_prysm_v1alpha1_light_server_proto_rawDescOnce.Do(func() {
		file_proto_prysm_v1alpha1_light_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_prysm_v1alpha1_light_server_proto_rawDescData)
	})
	return file_proto_prysm_v1alpha1_light_server_proto_rawDescData
}

var file_proto_prysm_v1alpha1_light_server_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_prysm_v1alpha1_light_server_proto_goTypes = []interface{}{
	(*GetBestUpdatesRequest)(nil), // 0: ethereum.eth.v1alpha1.GetBestUpdatesRequest
	(*LightClientUpdates)(nil),    // 1: ethereum.eth.v1alpha1.LightClientUpdates
	(*LightClientUpdate)(nil),     // 2: ethereum.eth.v1alpha1.LightClientUpdate
	(*BeaconBlockHeader)(nil),     // 3: ethereum.eth.v1alpha1.BeaconBlockHeader
	(*SyncCommittee)(nil),         // 4: ethereum.eth.v1alpha1.SyncCommittee
	(*SyncAggregate)(nil),         // 5: ethereum.eth.v1alpha1.SyncAggregate
	(*empty.Empty)(nil),           // 6: google.protobuf.Empty
}
var file_proto_prysm_v1alpha1_light_server_proto_depIdxs = []int32{
	2, // 0: ethereum.eth.v1alpha1.LightClientUpdates.updates:type_name -> ethereum.eth.v1alpha1.LightClientUpdate
	3, // 1: ethereum.eth.v1alpha1.LightClientUpdate.attested_header:type_name -> ethereum.eth.v1alpha1.BeaconBlockHeader
	4, // 2: ethereum.eth.v1alpha1.LightClientUpdate.next_sync_committee:type_name -> ethereum.eth.v1alpha1.SyncCommittee
	3, // 3: ethereum.eth.v1alpha1.LightClientUpdate.finality_header:type_name -> ethereum.eth.v1alpha1.BeaconBlockHeader
	5, // 4: ethereum.eth.v1alpha1.LightClientUpdate.sync_aggregate:type_name -> ethereum.eth.v1alpha1.SyncAggregate
	0, // 5: ethereum.eth.v1alpha1.LightUpdateService.GetBestUpdates:input_type -> ethereum.eth.v1alpha1.GetBestUpdatesRequest
	6, // 6: ethereum.eth.v1alpha1.LightUpdateService.GetLatestUpdateFinalized:input_type -> google.protobuf.Empty
	6, // 7: ethereum.eth.v1alpha1.LightUpdateService.GetLatestUpdateUnFinalized:input_type -> google.protobuf.Empty
	1, // 8: ethereum.eth.v1alpha1.LightUpdateService.GetBestUpdates:output_type -> ethereum.eth.v1alpha1.LightClientUpdates
	2, // 9: ethereum.eth.v1alpha1.LightUpdateService.GetLatestUpdateFinalized:output_type -> ethereum.eth.v1alpha1.LightClientUpdate
	2, // 10: ethereum.eth.v1alpha1.LightUpdateService.GetLatestUpdateUnFinalized:output_type -> ethereum.eth.v1alpha1.LightClientUpdate
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_prysm_v1alpha1_light_server_proto_init() }
func file_proto_prysm_v1alpha1_light_server_proto_init() {
	if File_proto_prysm_v1alpha1_light_server_proto != nil {
		return
	}
	file_proto_prysm_v1alpha1_beacon_state_proto_init()
	file_proto_prysm_v1alpha1_beacon_block_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_prysm_v1alpha1_light_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBestUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_prysm_v1alpha1_light_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightClientUpdates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_prysm_v1alpha1_light_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightClientUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_prysm_v1alpha1_light_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_prysm_v1alpha1_light_server_proto_goTypes,
		DependencyIndexes: file_proto_prysm_v1alpha1_light_server_proto_depIdxs,
		MessageInfos:      file_proto_prysm_v1alpha1_light_server_proto_msgTypes,
	}.Build()
	File_proto_prysm_v1alpha1_light_server_proto = out.File
	file_proto_prysm_v1alpha1_light_server_proto_rawDesc = nil
	file_proto_prysm_v1alpha1_light_server_proto_goTypes = nil
	file_proto_prysm_v1alpha1_light_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LightUpdateServiceClient is the client API for LightUpdateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LightUpdateServiceClient interface {
	GetBestUpdates(ctx context.Context, in *GetBestUpdatesRequest, opts ...grpc.CallOption) (*LightClientUpdates, error)
	GetLatestUpdateFinalized(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LightClientUpdate, error)
	GetLatestUpdateUnFinalized(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LightClientUpdate, error)
}

type lightUpdateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLightUpdateServiceClient(cc grpc.ClientConnInterface) LightUpdateServiceClient {
	return &lightUpdateServiceClient{cc}
}

func (c *lightUpdateServiceClient) GetBestUpdates(ctx context.Context, in *GetBestUpdatesRequest, opts ...grpc.CallOption) (*LightClientUpdates, error) {
	out := new(LightClientUpdates)
	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.LightUpdateService/GetBestUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightUpdateServiceClient) GetLatestUpdateFinalized(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LightClientUpdate, error) {
	out := new(LightClientUpdate)
	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.LightUpdateService/GetLatestUpdateFinalized", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightUpdateServiceClient) GetLatestUpdateUnFinalized(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*LightClientUpdate, error) {
	out := new(LightClientUpdate)
	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.LightUpdateService/GetLatestUpdateUnFinalized", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LightUpdateServiceServer is the server API for LightUpdateService service.
type LightUpdateServiceServer interface {
	GetBestUpdates(context.Context, *GetBestUpdatesRequest) (*LightClientUpdates, error)
	GetLatestUpdateFinalized(context.Context, *empty.Empty) (*LightClientUpdate, error)
	GetLatestUpdateUnFinalized(context.Context, *empty.Empty) (*LightClientUpdate, error)
}

// UnimplementedLightUpdateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLightUpdateServiceServer struct {
}

func (*UnimplementedLightUpdateServiceServer) GetBestUpdates(context.Context, *GetBestUpdatesRequest) (*LightClientUpdates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBestUpdates not implemented")
}
func (*UnimplementedLightUpdateServiceServer) GetLatestUpdateFinalized(context.Context, *empty.Empty) (*LightClientUpdate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestUpdateFinalized not implemented")
}
func (*UnimplementedLightUpdateServiceServer) GetLatestUpdateUnFinalized(context.Context, *empty.Empty) (*LightClientUpdate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestUpdateUnFinalized not implemented")
}

func RegisterLightUpdateServiceServer(s *grpc.Server, srv LightUpdateServiceServer) {
	s.RegisterService(&_LightUpdateService_serviceDesc, srv)
}

func _LightUpdateService_GetBestUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBestUpdatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightUpdateServiceServer).GetBestUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.eth.v1alpha1.LightUpdateService/GetBestUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightUpdateServiceServer).GetBestUpdates(ctx, req.(*GetBestUpdatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightUpdateService_GetLatestUpdateFinalized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightUpdateServiceServer).GetLatestUpdateFinalized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.eth.v1alpha1.LightUpdateService/GetLatestUpdateFinalized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightUpdateServiceServer).GetLatestUpdateFinalized(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _LightUpdateService_GetLatestUpdateUnFinalized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightUpdateServiceServer).GetLatestUpdateUnFinalized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.eth.v1alpha1.LightUpdateService/GetLatestUpdateUnFinalized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightUpdateServiceServer).GetLatestUpdateUnFinalized(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _LightUpdateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.eth.v1alpha1.LightUpdateService",
	HandlerType: (*LightUpdateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBestUpdates",
			Handler:    _LightUpdateService_GetBestUpdates_Handler,
		},
		{
			MethodName: "GetLatestUpdateFinalized",
			Handler:    _LightUpdateService_GetLatestUpdateFinalized_Handler,
		},
		{
			MethodName: "GetLatestUpdateUnFinalized",
			Handler:    _LightUpdateService_GetLatestUpdateUnFinalized_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/prysm/v1alpha1/light_server.proto",
}
