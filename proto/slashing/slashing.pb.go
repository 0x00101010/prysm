// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: proto/slashing/slashing.proto

package ethereum_slashing

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	github_com_prysmaticlabs_eth2_types "github.com/prysmaticlabs/eth2-types"
	_ "github.com/prysmaticlabs/ethereumapis/eth/ext"
	v1alpha1 "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1"
	github_com_prysmaticlabs_go_bitfield "github.com/prysmaticlabs/go-bitfield"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HighestAttestationRequest struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorIds []uint64 `protobuf:"varint,1,rep,packed,name=validator_ids,json=validatorIds,proto3" json:"validator_ids,omitempty"`
=======
	ValidatorIds         []uint64 `protobuf:"varint,1,rep,packed,name=validator_ids,json=validatorIds,proto3" json:"validator_ids,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *HighestAttestationRequest) Reset() {
	*x = HighestAttestationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighestAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighestAttestationRequest) ProtoMessage() {}

func (x *HighestAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighestAttestationRequest.ProtoReflect.Descriptor instead.
func (*HighestAttestationRequest) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{0}
}

<<<<<<< HEAD
func (x *HighestAttestationRequest) GetValidatorIds() []uint64 {
	if x != nil {
		return x.ValidatorIds
=======
// Deprecated: Do not use.
func (m *HighestAttestationRequest) GetValidatorIds() []uint64 {
	if m != nil {
		return m.ValidatorIds
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return nil
}

type HighestAttestationResponse struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attestations []*HighestAttestation `protobuf:"bytes,1,rep,name=attestations,proto3" json:"attestations,omitempty"`
=======
	Attestations         []*HighestAttestation `protobuf:"bytes,1,rep,name=attestations,proto3" json:"attestations,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *HighestAttestationResponse) Reset() {
	*x = HighestAttestationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighestAttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighestAttestationResponse) ProtoMessage() {}

func (x *HighestAttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighestAttestationResponse.ProtoReflect.Descriptor instead.
func (*HighestAttestationResponse) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{1}
}

<<<<<<< HEAD
func (x *HighestAttestationResponse) GetAttestations() []*HighestAttestation {
	if x != nil {
		return x.Attestations
=======
// Deprecated: Do not use.
func (m *HighestAttestationResponse) GetAttestations() []*HighestAttestation {
	if m != nil {
		return m.Attestations
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return nil
}

type HighestAttestation struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorId        uint64                                    `protobuf:"varint,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`
	HighestSourceEpoch github_com_prysmaticlabs_eth2_types.Epoch `protobuf:"varint,2,opt,name=highest_source_epoch,json=highestSourceEpoch,proto3" json:"highest_source_epoch,omitempty" cast-type:"github.com/prysmaticlabs/eth2-types.Epoch"`
	HighestTargetEpoch github_com_prysmaticlabs_eth2_types.Epoch `protobuf:"varint,3,opt,name=highest_target_epoch,json=highestTargetEpoch,proto3" json:"highest_target_epoch,omitempty" cast-type:"github.com/prysmaticlabs/eth2-types.Epoch"`
=======
	ValidatorId          uint64                                    `protobuf:"varint,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`                                                                           // Deprecated: Do not use.
	HighestSourceEpoch   github_com_prysmaticlabs_eth2_types.Epoch `protobuf:"varint,2,opt,name=highest_source_epoch,json=highestSourceEpoch,proto3,casttype=github.com/prysmaticlabs/eth2-types.Epoch" json:"highest_source_epoch,omitempty"` // Deprecated: Do not use.
	HighestTargetEpoch   github_com_prysmaticlabs_eth2_types.Epoch `protobuf:"varint,3,opt,name=highest_target_epoch,json=highestTargetEpoch,proto3,casttype=github.com/prysmaticlabs/eth2-types.Epoch" json:"highest_target_epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *HighestAttestation) Reset() {
	*x = HighestAttestation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighestAttestation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighestAttestation) ProtoMessage() {}

func (x *HighestAttestation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighestAttestation.ProtoReflect.Descriptor instead.
func (*HighestAttestation) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{2}
}

<<<<<<< HEAD
func (x *HighestAttestation) GetValidatorId() uint64 {
	if x != nil {
		return x.ValidatorId
=======
// Deprecated: Do not use.
func (m *HighestAttestation) GetValidatorId() uint64 {
	if m != nil {
		return m.ValidatorId
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return 0
}

<<<<<<< HEAD
func (x *HighestAttestation) GetHighestSourceEpoch() github_com_prysmaticlabs_eth2_types.Epoch {
	if x != nil {
		return x.HighestSourceEpoch
=======
// Deprecated: Do not use.
func (m *HighestAttestation) GetHighestSourceEpoch() github_com_prysmaticlabs_eth2_types.Epoch {
	if m != nil {
		return m.HighestSourceEpoch
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return github_com_prysmaticlabs_eth2_types.Epoch(0)
}

func (x *HighestAttestation) GetHighestTargetEpoch() github_com_prysmaticlabs_eth2_types.Epoch {
	if x != nil {
		return x.HighestTargetEpoch
	}
	return github_com_prysmaticlabs_eth2_types.Epoch(0)
}

type ProposerSlashingResponse struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposerSlashing []*v1alpha1.ProposerSlashing `protobuf:"bytes,1,rep,name=proposer_slashing,json=proposerSlashing,proto3" json:"proposer_slashing,omitempty"`
=======
	ProposerSlashing     []*v1alpha1.ProposerSlashing `protobuf:"bytes,1,rep,name=proposer_slashing,json=proposerSlashing,proto3" json:"proposer_slashing,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *ProposerSlashingResponse) Reset() {
	*x = ProposerSlashingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposerSlashingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposerSlashingResponse) ProtoMessage() {}

func (x *ProposerSlashingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposerSlashingResponse.ProtoReflect.Descriptor instead.
func (*ProposerSlashingResponse) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{3}
}

<<<<<<< HEAD
func (x *ProposerSlashingResponse) GetProposerSlashing() []*v1alpha1.ProposerSlashing {
	if x != nil {
		return x.ProposerSlashing
=======
// Deprecated: Do not use.
func (m *ProposerSlashingResponse) GetProposerSlashing() []*v1alpha1.ProposerSlashing {
	if m != nil {
		return m.ProposerSlashing
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return nil
}

type Slashable struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slashable bool `protobuf:"varint,1,opt,name=slashable,proto3" json:"slashable,omitempty"`
=======
	Slashable            bool     `protobuf:"varint,1,opt,name=slashable,proto3" json:"slashable,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *Slashable) Reset() {
	*x = Slashable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slashable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slashable) ProtoMessage() {}

func (x *Slashable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slashable.ProtoReflect.Descriptor instead.
func (*Slashable) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{4}
}

<<<<<<< HEAD
func (x *Slashable) GetSlashable() bool {
	if x != nil {
		return x.Slashable
=======
// Deprecated: Do not use.
func (m *Slashable) GetSlashable() bool {
	if m != nil {
		return m.Slashable
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return false
}

type AttesterSlashingResponse struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttesterSlashing []*v1alpha1.AttesterSlashing `protobuf:"bytes,1,rep,name=attester_slashing,json=attesterSlashing,proto3" json:"attester_slashing,omitempty"`
=======
	AttesterSlashing     []*v1alpha1.AttesterSlashing `protobuf:"bytes,1,rep,name=attester_slashing,json=attesterSlashing,proto3" json:"attester_slashing,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *AttesterSlashingResponse) Reset() {
	*x = AttesterSlashingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttesterSlashingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttesterSlashingResponse) ProtoMessage() {}

func (x *AttesterSlashingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttesterSlashingResponse.ProtoReflect.Descriptor instead.
func (*AttesterSlashingResponse) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{5}
}

<<<<<<< HEAD
func (x *AttesterSlashingResponse) GetAttesterSlashing() []*v1alpha1.AttesterSlashing {
	if x != nil {
		return x.AttesterSlashing
=======
// Deprecated: Do not use.
func (m *AttesterSlashingResponse) GetAttesterSlashing() []*v1alpha1.AttesterSlashing {
	if m != nil {
		return m.AttesterSlashing
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return nil
}

type ProposalHistory struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochBits          github_com_prysmaticlabs_go_bitfield.Bitlist `protobuf:"bytes,1,opt,name=epoch_bits,json=epochBits,proto3" json:"epoch_bits,omitempty" cast-type:"github.com/prysmaticlabs/go-bitfield.Bitlist"`
	LatestEpochWritten github_com_prysmaticlabs_eth2_types.Epoch    `protobuf:"varint,2,opt,name=latest_epoch_written,json=latestEpochWritten,proto3" json:"latest_epoch_written,omitempty" cast-type:"github.com/prysmaticlabs/eth2-types.Epoch"`
=======
	EpochBits            github_com_prysmaticlabs_go_bitfield.Bitlist `protobuf:"bytes,1,opt,name=epoch_bits,json=epochBits,proto3,casttype=github.com/prysmaticlabs/go-bitfield.Bitlist" json:"epoch_bits,omitempty"`                            // Deprecated: Do not use.
	LatestEpochWritten   github_com_prysmaticlabs_eth2_types.Epoch    `protobuf:"varint,2,opt,name=latest_epoch_written,json=latestEpochWritten,proto3,casttype=github.com/prysmaticlabs/eth2-types.Epoch" json:"latest_epoch_written,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *ProposalHistory) Reset() {
	*x = ProposalHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalHistory) ProtoMessage() {}

func (x *ProposalHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalHistory.ProtoReflect.Descriptor instead.
func (*ProposalHistory) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{6}
}

<<<<<<< HEAD
func (x *ProposalHistory) GetEpochBits() github_com_prysmaticlabs_go_bitfield.Bitlist {
	if x != nil {
		return x.EpochBits
=======
// Deprecated: Do not use.
func (m *ProposalHistory) GetEpochBits() github_com_prysmaticlabs_go_bitfield.Bitlist {
	if m != nil {
		return m.EpochBits
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return github_com_prysmaticlabs_go_bitfield.Bitlist(nil)
}

<<<<<<< HEAD
func (x *ProposalHistory) GetLatestEpochWritten() github_com_prysmaticlabs_eth2_types.Epoch {
	if x != nil {
		return x.LatestEpochWritten
=======
// Deprecated: Do not use.
func (m *ProposalHistory) GetLatestEpochWritten() github_com_prysmaticlabs_eth2_types.Epoch {
	if m != nil {
		return m.LatestEpochWritten
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return github_com_prysmaticlabs_eth2_types.Epoch(0)
}

type AttestationHistory struct {
<<<<<<< HEAD
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetToSource     map[uint64]uint64                         `protobuf:"bytes,1,rep,name=target_to_source,json=targetToSource,proto3" json:"target_to_source,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LatestEpochWritten github_com_prysmaticlabs_eth2_types.Epoch `protobuf:"varint,2,opt,name=latest_epoch_written,json=latestEpochWritten,proto3" json:"latest_epoch_written,omitempty" cast-type:"github.com/prysmaticlabs/eth2-types.Epoch"`
=======
	TargetToSource       map[uint64]uint64                         `protobuf:"bytes,1,rep,name=target_to_source,json=targetToSource,proto3" json:"target_to_source,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // Deprecated: Do not use.
	LatestEpochWritten   github_com_prysmaticlabs_eth2_types.Epoch `protobuf:"varint,2,opt,name=latest_epoch_written,json=latestEpochWritten,proto3,casttype=github.com/prysmaticlabs/eth2-types.Epoch" json:"latest_epoch_written,omitempty"`                           // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

func (x *AttestationHistory) Reset() {
	*x = AttestationHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slashing_slashing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationHistory) ProtoMessage() {}

func (x *AttestationHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slashing_slashing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationHistory.ProtoReflect.Descriptor instead.
func (*AttestationHistory) Descriptor() ([]byte, []int) {
	return file_proto_slashing_slashing_proto_rawDescGZIP(), []int{7}
}

<<<<<<< HEAD
func (x *AttestationHistory) GetTargetToSource() map[uint64]uint64 {
	if x != nil {
		return x.TargetToSource
=======
// Deprecated: Do not use.
func (m *AttestationHistory) GetTargetToSource() map[uint64]uint64 {
	if m != nil {
		return m.TargetToSource
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
	}
	return nil
}

<<<<<<< HEAD
func (x *AttestationHistory) GetLatestEpochWritten() github_com_prysmaticlabs_eth2_types.Epoch {
	if x != nil {
		return x.LatestEpochWritten
	}
	return github_com_prysmaticlabs_eth2_types.Epoch(0)
}

var File_proto_slashing_slashing_proto protoreflect.FileDescriptor

var file_proto_slashing_slashing_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x2f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x1a, 0x15, 0x65, 0x74, 0x68, 0x2f, 0x65, 0x78, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x65, 0x74, 0x68, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x19, 0x48, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x22, 0x67, 0x0a, 0x1a,
	0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x61, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x12, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73,
	0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x5f, 0x0a, 0x14, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x2d, 0x82,
	0xb5, 0x18, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x79, 0x73, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x65, 0x74, 0x68, 0x32,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x12, 0x68, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x5f, 0x0a, 0x14, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x2d,
	0x82, 0xb5, 0x18, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x72, 0x79, 0x73, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x65, 0x74, 0x68,
	0x32, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x12, 0x68,
	0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x22, 0x70, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x09, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x70,
	0x0a, 0x18, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x10,
	0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x4f, 0x0a, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x62, 0x69,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x30, 0x82, 0xb5, 0x18, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x61, 0x74,
	0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x2e, 0x42, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x42, 0x69, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x2d, 0x82, 0xb5, 0x18, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x61, 0x62,
	0x73, 0x2f, 0x65, 0x74, 0x68, 0x32, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x52, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x57,
	0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x22, 0x9d, 0x02, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x63, 0x0a,
	0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x2d, 0x82, 0xb5, 0x18, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x65,
	0x74, 0x68, 0x32, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52,
	0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x57, 0x72, 0x69, 0x74,
	0x74, 0x65, 0x6e, 0x1a, 0x41, 0x0a, 0x13, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xaf, 0x04, 0x0a, 0x07, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x65, 0x72, 0x12, 0x70, 0x0a, 0x16, 0x49, 0x73, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2b, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x49, 0x73, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2e, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x2b, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x1e, 0x49, 0x73, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x73, 0x6c,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x62, 0x0a, 0x18, 0x49, 0x73, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x2e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_slashing_slashing_proto_rawDescOnce sync.Once
	file_proto_slashing_slashing_proto_rawDescData = file_proto_slashing_slashing_proto_rawDesc
)

func file_proto_slashing_slashing_proto_rawDescGZIP() []byte {
	file_proto_slashing_slashing_proto_rawDescOnce.Do(func() {
		file_proto_slashing_slashing_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_slashing_slashing_proto_rawDescData)
	})
	return file_proto_slashing_slashing_proto_rawDescData
}

var file_proto_slashing_slashing_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_slashing_slashing_proto_goTypes = []interface{}{
	(*HighestAttestationRequest)(nil),        // 0: ethereum.slashing.HighestAttestationRequest
	(*HighestAttestationResponse)(nil),       // 1: ethereum.slashing.HighestAttestationResponse
	(*HighestAttestation)(nil),               // 2: ethereum.slashing.HighestAttestation
	(*ProposerSlashingResponse)(nil),         // 3: ethereum.slashing.ProposerSlashingResponse
	(*Slashable)(nil),                        // 4: ethereum.slashing.Slashable
	(*AttesterSlashingResponse)(nil),         // 5: ethereum.slashing.AttesterSlashingResponse
	(*ProposalHistory)(nil),                  // 6: ethereum.slashing.ProposalHistory
	(*AttestationHistory)(nil),               // 7: ethereum.slashing.AttestationHistory
	nil,                                      // 8: ethereum.slashing.AttestationHistory.TargetToSourceEntry
	(*v1alpha1.ProposerSlashing)(nil),        // 9: ethereum.eth.v1alpha1.ProposerSlashing
	(*v1alpha1.AttesterSlashing)(nil),        // 10: ethereum.eth.v1alpha1.AttesterSlashing
	(*v1alpha1.IndexedAttestation)(nil),      // 11: ethereum.eth.v1alpha1.IndexedAttestation
	(*v1alpha1.SignedBeaconBlockHeader)(nil), // 12: ethereum.eth.v1alpha1.SignedBeaconBlockHeader
	(*v1alpha1.BeaconBlockHeader)(nil),       // 13: ethereum.eth.v1alpha1.BeaconBlockHeader
}
var file_proto_slashing_slashing_proto_depIdxs = []int32{
	2,  // 0: ethereum.slashing.HighestAttestationResponse.attestations:type_name -> ethereum.slashing.HighestAttestation
	9,  // 1: ethereum.slashing.ProposerSlashingResponse.proposer_slashing:type_name -> ethereum.eth.v1alpha1.ProposerSlashing
	10, // 2: ethereum.slashing.AttesterSlashingResponse.attester_slashing:type_name -> ethereum.eth.v1alpha1.AttesterSlashing
	8,  // 3: ethereum.slashing.AttestationHistory.target_to_source:type_name -> ethereum.slashing.AttestationHistory.TargetToSourceEntry
	11, // 4: ethereum.slashing.Slasher.IsSlashableAttestation:input_type -> ethereum.eth.v1alpha1.IndexedAttestation
	12, // 5: ethereum.slashing.Slasher.IsSlashableBlock:input_type -> ethereum.eth.v1alpha1.SignedBeaconBlockHeader
	11, // 6: ethereum.slashing.Slasher.IsSlashableAttestationNoUpdate:input_type -> ethereum.eth.v1alpha1.IndexedAttestation
	13, // 7: ethereum.slashing.Slasher.IsSlashableBlockNoUpdate:input_type -> ethereum.eth.v1alpha1.BeaconBlockHeader
	0,  // 8: ethereum.slashing.Slasher.HighestAttestations:input_type -> ethereum.slashing.HighestAttestationRequest
	5,  // 9: ethereum.slashing.Slasher.IsSlashableAttestation:output_type -> ethereum.slashing.AttesterSlashingResponse
	3,  // 10: ethereum.slashing.Slasher.IsSlashableBlock:output_type -> ethereum.slashing.ProposerSlashingResponse
	4,  // 11: ethereum.slashing.Slasher.IsSlashableAttestationNoUpdate:output_type -> ethereum.slashing.Slashable
	4,  // 12: ethereum.slashing.Slasher.IsSlashableBlockNoUpdate:output_type -> ethereum.slashing.Slashable
	1,  // 13: ethereum.slashing.Slasher.HighestAttestations:output_type -> ethereum.slashing.HighestAttestationResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_slashing_slashing_proto_init() }
func file_proto_slashing_slashing_proto_init() {
	if File_proto_slashing_slashing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_slashing_slashing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighestAttestationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slashing_slashing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighestAttestationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slashing_slashing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighestAttestation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slashing_slashing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposerSlashingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slashing_slashing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slashable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slashing_slashing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttesterSlashingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slashing_slashing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slashing_slashing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_slashing_slashing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_slashing_slashing_proto_goTypes,
		DependencyIndexes: file_proto_slashing_slashing_proto_depIdxs,
		MessageInfos:      file_proto_slashing_slashing_proto_msgTypes,
	}.Build()
	File_proto_slashing_slashing_proto = out.File
	file_proto_slashing_slashing_proto_rawDesc = nil
	file_proto_slashing_slashing_proto_goTypes = nil
	file_proto_slashing_slashing_proto_depIdxs = nil
=======
// Deprecated: Do not use.
func (m *AttestationHistory) GetLatestEpochWritten() github_com_prysmaticlabs_eth2_types.Epoch {
	if m != nil {
		return m.LatestEpochWritten
	}
	return 0
}

func init() {
	proto.RegisterType((*HighestAttestationRequest)(nil), "ethereum.slashing.HighestAttestationRequest")
	proto.RegisterType((*HighestAttestationResponse)(nil), "ethereum.slashing.HighestAttestationResponse")
	proto.RegisterType((*HighestAttestation)(nil), "ethereum.slashing.HighestAttestation")
	proto.RegisterType((*ProposerSlashingResponse)(nil), "ethereum.slashing.ProposerSlashingResponse")
	proto.RegisterType((*Slashable)(nil), "ethereum.slashing.Slashable")
	proto.RegisterType((*AttesterSlashingResponse)(nil), "ethereum.slashing.AttesterSlashingResponse")
	proto.RegisterType((*ProposalHistory)(nil), "ethereum.slashing.ProposalHistory")
	proto.RegisterType((*AttestationHistory)(nil), "ethereum.slashing.AttestationHistory")
	proto.RegisterMapType((map[uint64]uint64)(nil), "ethereum.slashing.AttestationHistory.TargetToSourceEntry")
}

func init() { proto.RegisterFile("proto/slashing/slashing.proto", fileDescriptor_da7e95107d0081b4) }

var fileDescriptor_da7e95107d0081b4 = []byte{
	// 708 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0x56, 0xda, 0xfd, 0xfe, 0xcc, 0xeb, 0xef, 0x47, 0xe7, 0x4d, 0xa8, 0x54, 0xd0, 0x4d, 0x91,
	0xa6, 0x6d, 0x62, 0x4d, 0xb5, 0x72, 0x03, 0xdc, 0xad, 0x02, 0x69, 0xbb, 0x00, 0x41, 0x37, 0x04,
	0x77, 0x91, 0xd3, 0x9c, 0x25, 0xd6, 0xb2, 0x38, 0xc4, 0x27, 0x1b, 0x7d, 0x03, 0xde, 0x83, 0x87,
	0x61, 0x97, 0x3c, 0xc1, 0x84, 0xf6, 0x18, 0xbb, 0x01, 0xc5, 0x4e, 0xd3, 0xd0, 0xa4, 0x52, 0xc7,
	0x05, 0x77, 0xf6, 0xf1, 0xf1, 0xf7, 0x9d, 0xf3, 0xf9, 0xb3, 0x4d, 0x1e, 0x45, 0xb1, 0x40, 0xd1,
	0x93, 0x01, 0x93, 0x3e, 0x0f, 0xbd, 0x7c, 0x60, 0xa9, 0x38, 0x5d, 0x05, 0xf4, 0x21, 0x86, 0xe4,
	0xdc, 0x9a, 0x2c, 0xb4, 0x37, 0x00, 0xfd, 0xde, 0xc5, 0x3e, 0x0b, 0x22, 0x9f, 0xed, 0xf7, 0x1c,
	0x60, 0x23, 0x11, 0xda, 0x4e, 0x20, 0x46, 0x67, 0x7a, 0x4f, 0xbb, 0xeb, 0x71, 0xf4, 0x13, 0xc7,
	0x1a, 0x89, 0xf3, 0x9e, 0x27, 0x3c, 0xd1, 0x53, 0x61, 0x27, 0x39, 0x55, 0x33, 0xcd, 0x97, 0x8e,
	0x74, 0xba, 0xf9, 0x82, 0x3c, 0x38, 0xe4, 0x9e, 0x0f, 0x12, 0x0f, 0x10, 0x41, 0x22, 0x43, 0x2e,
	0xc2, 0x21, 0x7c, 0x4c, 0x40, 0x22, 0xdd, 0x26, 0xff, 0x5d, 0xb0, 0x80, 0xbb, 0x0c, 0x45, 0x6c,
	0x73, 0x57, 0xb6, 0x8c, 0xcd, 0xfa, 0xce, 0xd2, 0xa0, 0xd6, 0x32, 0x86, 0x8d, 0x7c, 0xe1, 0xc8,
	0x95, 0xe6, 0x19, 0x69, 0x57, 0xa1, 0xc8, 0x48, 0x84, 0x12, 0xe8, 0x2b, 0xd2, 0x60, 0xd3, 0xb0,
	0x46, 0x59, 0xe9, 0x6f, 0x59, 0xa5, 0xee, 0xac, 0x32, 0x88, 0x26, 0x2b, 0x6e, 0x37, 0x7f, 0x18,
	0x84, 0x96, 0x13, 0xe9, 0x16, 0x69, 0x14, 0x8b, 0x6d, 0x19, 0x9b, 0x46, 0x56, 0xeb, 0x4a, 0xa1,
	0x56, 0xca, 0xc8, 0xba, 0xaf, 0x37, 0xdb, 0x52, 0x24, 0xf1, 0x08, 0x6c, 0x88, 0xc4, 0xc8, 0x6f,
	0xd5, 0x54, 0x7a, 0xef, 0xf6, 0x7a, 0x63, 0xb7, 0xa0, 0x60, 0x14, 0x8f, 0xe5, 0x39, 0x43, 0x3e,
	0x0a, 0x98, 0x23, 0x7b, 0x80, 0x7e, 0xbf, 0x8b, 0xe3, 0x08, 0xa4, 0xf5, 0x52, 0x6d, 0x32, 0x86,
	0x34, 0x03, 0x3b, 0x56, 0x58, 0x2a, 0x4a, 0xed, 0x29, 0x05, 0xb2, 0xd8, 0x03, 0xcc, 0x28, 0xea,
	0x8a, 0xa2, 0x7b, 0x27, 0x8a, 0x9c, 0xe0, 0x44, 0x21, 0xa9, 0x98, 0x89, 0xa4, 0xf5, 0x26, 0x16,
	0x91, 0x90, 0x10, 0x1f, 0x67, 0xd2, 0xe5, 0x62, 0x7f, 0x20, 0xab, 0x51, 0xb6, 0x66, 0x4f, 0x74,
	0xcd, 0x14, 0xdf, 0x9e, 0x2a, 0x0e, 0xe8, 0x5b, 0x13, 0x17, 0x59, 0xb3, 0x58, 0x4a, 0xb4, 0x66,
	0x34, 0x13, 0x35, 0xbb, 0x64, 0x59, 0x8d, 0x99, 0x13, 0x00, 0xdd, 0x24, 0xcb, 0x72, 0x32, 0x51,
	0x52, 0xff, 0xab, 0x76, 0x4d, 0x83, 0x69, 0x91, 0xfa, 0x78, 0xaa, 0x8b, 0x64, 0xd9, 0xda, 0xa2,
	0x45, 0xce, 0x62, 0xe9, 0x22, 0xd9, 0x4c, 0xd4, 0xfc, 0x6a, 0x90, 0x7b, 0xba, 0x1f, 0x16, 0x1c,
	0x72, 0x89, 0x22, 0x1e, 0xd3, 0xb7, 0x84, 0xa8, 0x03, 0xb0, 0x1d, 0x8e, 0x52, 0x15, 0xdb, 0x18,
	0xf4, 0x6f, 0xaf, 0x37, 0xf6, 0xe6, 0x9e, 0x82, 0x27, 0xba, 0x0e, 0xc7, 0x53, 0x0e, 0x81, 0x6b,
	0x0d, 0x38, 0x06, 0x5c, 0x62, 0xda, 0x9c, 0x42, 0x19, 0x70, 0x94, 0xa9, 0x8b, 0x02, 0x96, 0x52,
	0xeb, 0xa3, 0xb5, 0x2f, 0x63, 0x8e, 0x08, 0xe1, 0x6f, 0xbb, 0x48, 0x83, 0xa9, 0xe9, 0x7b, 0x0d,
	0x65, 0x7e, 0xa9, 0x11, 0x5a, 0xf0, 0xf7, 0xa4, 0x19, 0x8f, 0x34, 0x33, 0x53, 0xa1, 0xc8, 0x1c,
	0x9c, 0x29, 0xf7, 0xac, 0xe2, 0x42, 0x95, 0x01, 0x2c, 0x6d, 0xa4, 0x13, 0x91, 0x39, 0x36, 0xc4,
	0x78, 0xac, 0xb4, 0xfc, 0x1f, 0x7f, 0x59, 0xf8, 0x03, 0x2d, 0xb6, 0x0f, 0xc8, 0x5a, 0x45, 0x35,
	0xb4, 0x49, 0xea, 0x67, 0x30, 0xd6, 0x17, 0x78, 0x98, 0x0e, 0xe9, 0x3a, 0xf9, 0xeb, 0x82, 0x05,
	0x09, 0x68, 0xf2, 0xa1, 0x9e, 0x3c, 0xaf, 0x3d, 0x35, 0xfa, 0x57, 0x4b, 0xe4, 0x1f, 0x75, 0xf8,
	0x10, 0xd3, 0x84, 0xdc, 0x3f, 0x92, 0xb9, 0x45, 0x8b, 0x6f, 0xc3, 0xee, 0x1c, 0x53, 0x1d, 0x85,
	0x2e, 0x7c, 0x02, 0xb7, 0x90, 0xda, 0x7e, 0x3c, 0x57, 0xc5, 0xb2, 0x8f, 0xcd, 0xfa, 0xe7, 0x9a,
	0x41, 0x91, 0x34, 0x0b, 0xb4, 0x83, 0xf4, 0x2d, 0xa6, 0xd6, 0x1c, 0xc2, 0x63, 0xee, 0x85, 0xe0,
	0x0e, 0xd4, 0xb3, 0xad, 0x32, 0x0f, 0x81, 0xb9, 0x10, 0x57, 0xb2, 0xce, 0xbb, 0xe2, 0x9a, 0x35,
	0x24, 0x9d, 0xea, 0x66, 0x5f, 0x8b, 0x77, 0x91, 0xcb, 0x10, 0xee, 0xd2, 0xf4, 0xc3, 0x0a, 0xfa,
	0x1c, 0x5b, 0xf3, 0x79, 0xa4, 0x35, 0xdb, 0x65, 0xce, 0xb4, 0x33, 0x87, 0xa9, 0xdc, 0xe7, 0x02,
	0x44, 0x97, 0x64, 0xad, 0xfc, 0xba, 0x4b, 0xba, 0xb7, 0xd0, 0x77, 0x91, 0xfd, 0x5c, 0xed, 0xee,
	0x82, 0xd9, 0x05, 0x45, 0x07, 0x8d, 0xab, 0x9b, 0x8e, 0xf1, 0xed, 0xa6, 0x63, 0x7c, 0xbf, 0xe9,
	0x18, 0xce, 0xdf, 0xea, 0x7f, 0x7c, 0xf2, 0x33, 0x00, 0x00, 0xff, 0xff, 0x41, 0x77, 0x31, 0x4d,
	0xa3, 0x07, 0x00, 0x00,
>>>>>>> 7b8e48d80ed56bf31b3dced8d881be43544ff512
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SlasherClient is the client API for Slasher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SlasherClient interface {
	IsSlashableAttestation(ctx context.Context, in *v1alpha1.IndexedAttestation, opts ...grpc.CallOption) (*AttesterSlashingResponse, error)
	IsSlashableBlock(ctx context.Context, in *v1alpha1.SignedBeaconBlockHeader, opts ...grpc.CallOption) (*ProposerSlashingResponse, error)
	IsSlashableAttestationNoUpdate(ctx context.Context, in *v1alpha1.IndexedAttestation, opts ...grpc.CallOption) (*Slashable, error)
	IsSlashableBlockNoUpdate(ctx context.Context, in *v1alpha1.BeaconBlockHeader, opts ...grpc.CallOption) (*Slashable, error)
	HighestAttestations(ctx context.Context, in *HighestAttestationRequest, opts ...grpc.CallOption) (*HighestAttestationResponse, error)
}

type slasherClient struct {
	cc grpc.ClientConnInterface
}

func NewSlasherClient(cc grpc.ClientConnInterface) SlasherClient {
	return &slasherClient{cc}
}

// Deprecated: Do not use.
func (c *slasherClient) IsSlashableAttestation(ctx context.Context, in *v1alpha1.IndexedAttestation, opts ...grpc.CallOption) (*AttesterSlashingResponse, error) {
	out := new(AttesterSlashingResponse)
	err := c.cc.Invoke(ctx, "/ethereum.slashing.Slasher/IsSlashableAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *slasherClient) IsSlashableBlock(ctx context.Context, in *v1alpha1.SignedBeaconBlockHeader, opts ...grpc.CallOption) (*ProposerSlashingResponse, error) {
	out := new(ProposerSlashingResponse)
	err := c.cc.Invoke(ctx, "/ethereum.slashing.Slasher/IsSlashableBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *slasherClient) IsSlashableAttestationNoUpdate(ctx context.Context, in *v1alpha1.IndexedAttestation, opts ...grpc.CallOption) (*Slashable, error) {
	out := new(Slashable)
	err := c.cc.Invoke(ctx, "/ethereum.slashing.Slasher/IsSlashableAttestationNoUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *slasherClient) IsSlashableBlockNoUpdate(ctx context.Context, in *v1alpha1.BeaconBlockHeader, opts ...grpc.CallOption) (*Slashable, error) {
	out := new(Slashable)
	err := c.cc.Invoke(ctx, "/ethereum.slashing.Slasher/IsSlashableBlockNoUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *slasherClient) HighestAttestations(ctx context.Context, in *HighestAttestationRequest, opts ...grpc.CallOption) (*HighestAttestationResponse, error) {
	out := new(HighestAttestationResponse)
	err := c.cc.Invoke(ctx, "/ethereum.slashing.Slasher/HighestAttestations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlasherServer is the server API for Slasher service.
type SlasherServer interface {
	IsSlashableAttestation(context.Context, *v1alpha1.IndexedAttestation) (*AttesterSlashingResponse, error)
	IsSlashableBlock(context.Context, *v1alpha1.SignedBeaconBlockHeader) (*ProposerSlashingResponse, error)
	IsSlashableAttestationNoUpdate(context.Context, *v1alpha1.IndexedAttestation) (*Slashable, error)
	IsSlashableBlockNoUpdate(context.Context, *v1alpha1.BeaconBlockHeader) (*Slashable, error)
	HighestAttestations(context.Context, *HighestAttestationRequest) (*HighestAttestationResponse, error)
}

// UnimplementedSlasherServer can be embedded to have forward compatible implementations.
type UnimplementedSlasherServer struct {
}

func (*UnimplementedSlasherServer) IsSlashableAttestation(context.Context, *v1alpha1.IndexedAttestation) (*AttesterSlashingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsSlashableAttestation not implemented")
}
func (*UnimplementedSlasherServer) IsSlashableBlock(context.Context, *v1alpha1.SignedBeaconBlockHeader) (*ProposerSlashingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsSlashableBlock not implemented")
}
func (*UnimplementedSlasherServer) IsSlashableAttestationNoUpdate(context.Context, *v1alpha1.IndexedAttestation) (*Slashable, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsSlashableAttestationNoUpdate not implemented")
}
func (*UnimplementedSlasherServer) IsSlashableBlockNoUpdate(context.Context, *v1alpha1.BeaconBlockHeader) (*Slashable, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsSlashableBlockNoUpdate not implemented")
}
func (*UnimplementedSlasherServer) HighestAttestations(context.Context, *HighestAttestationRequest) (*HighestAttestationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HighestAttestations not implemented")
}

func RegisterSlasherServer(s *grpc.Server, srv SlasherServer) {
	s.RegisterService(&_Slasher_serviceDesc, srv)
}

func _Slasher_IsSlashableAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.IndexedAttestation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlasherServer).IsSlashableAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.slashing.Slasher/IsSlashableAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlasherServer).IsSlashableAttestation(ctx, req.(*v1alpha1.IndexedAttestation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slasher_IsSlashableBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.SignedBeaconBlockHeader)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlasherServer).IsSlashableBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.slashing.Slasher/IsSlashableBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlasherServer).IsSlashableBlock(ctx, req.(*v1alpha1.SignedBeaconBlockHeader))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slasher_IsSlashableAttestationNoUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.IndexedAttestation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlasherServer).IsSlashableAttestationNoUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.slashing.Slasher/IsSlashableAttestationNoUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlasherServer).IsSlashableAttestationNoUpdate(ctx, req.(*v1alpha1.IndexedAttestation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slasher_IsSlashableBlockNoUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.BeaconBlockHeader)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlasherServer).IsSlashableBlockNoUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.slashing.Slasher/IsSlashableBlockNoUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlasherServer).IsSlashableBlockNoUpdate(ctx, req.(*v1alpha1.BeaconBlockHeader))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slasher_HighestAttestations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HighestAttestationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlasherServer).HighestAttestations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.slashing.Slasher/HighestAttestations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlasherServer).HighestAttestations(ctx, req.(*HighestAttestationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Slasher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.slashing.Slasher",
	HandlerType: (*SlasherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsSlashableAttestation",
			Handler:    _Slasher_IsSlashableAttestation_Handler,
		},
		{
			MethodName: "IsSlashableBlock",
			Handler:    _Slasher_IsSlashableBlock_Handler,
		},
		{
			MethodName: "IsSlashableAttestationNoUpdate",
			Handler:    _Slasher_IsSlashableAttestationNoUpdate_Handler,
		},
		{
			MethodName: "IsSlashableBlockNoUpdate",
			Handler:    _Slasher_IsSlashableBlockNoUpdate_Handler,
		},
		{
			MethodName: "HighestAttestations",
			Handler:    _Slasher_HighestAttestations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/slashing/slashing.proto",
}
