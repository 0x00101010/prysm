package htrutils_test

import (
	"encoding/hex"
	"strings"
	"testing"

	ethpb "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1"
	pb "github.com/prysmaticlabs/prysm/proto/beacon/p2p/v1"
	"github.com/prysmaticlabs/prysm/shared/hashutil"
	"github.com/prysmaticlabs/prysm/shared/htrutils"
	"github.com/prysmaticlabs/prysm/shared/testutil/assert"
	"github.com/prysmaticlabs/prysm/shared/testutil/require"
)

func TestTransactionsRoot_Conformity(t *testing.T) {
	transactions := make([][]byte, len(transactionFixtures))
	for i, fixture := range transactionFixtures {
		decoded, err := hex.DecodeString(strings.TrimPrefix(fixture, "0x"))
		require.NoError(t, err)
		transactions[i] = decoded
	}
	wantedResult, err := htrutils.TransactionsRoot(transactions)
	require.NoError(t, err)
	fastSSZResult, err := htrutils.FastSSZTransactionsRoot(transactions)
	require.NoError(t, err)
	if fastSSZResult != wantedResult {
		t.Errorf("Wanted %#x, received %#x", wantedResult, fastSSZResult)
	}
}

func TestUint64Root(t *testing.T) {
	uintVal := uint64(1234567890)
	expected := [32]byte{210, 2, 150, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

	result := htrutils.Uint64Root(uintVal)
	assert.Equal(t, expected, result)
}

func TestForkRoot(t *testing.T) {
	testFork := pb.Fork{
		PreviousVersion: []byte{123},
		CurrentVersion:  []byte{124},
		Epoch:           1234567890,
	}
	expected := [32]byte{19, 46, 77, 103, 92, 175, 247, 33, 100, 64, 17, 111, 199, 145, 69, 38, 217, 112, 6, 16, 149, 201, 225, 144, 192, 228, 197, 172, 157, 78, 114, 140}

	result, err := htrutils.ForkRoot(&testFork)
	require.NoError(t, err)
	assert.Equal(t, expected, result)
}

func TestCheckPointRoot(t *testing.T) {
	testHasher := hashutil.CustomSHA256Hasher()
	testCheckpoint := ethpb.Checkpoint{
		Epoch: 1234567890,
		Root:  []byte{222},
	}
	expected := [32]byte{228, 65, 39, 109, 183, 249, 167, 232, 125, 239, 25, 155, 207, 4, 84, 174, 176, 229, 175, 224, 62, 33, 215, 254, 170, 220, 132, 65, 246, 128, 68, 194}

	result, err := htrutils.CheckpointRoot(testHasher, &testCheckpoint)
	require.NoError(t, err)
	assert.Equal(t, expected, result)
}

func TestHistoricalRootsRoot(t *testing.T) {
	testHistoricalRoots := [][]byte{{123}, {234}}
	expected := [32]byte{70, 204, 150, 196, 89, 138, 190, 205, 65, 207, 120, 166, 179, 247, 147, 20, 29, 133, 117, 116, 151, 234, 129, 32, 22, 15, 79, 178, 98, 73, 132, 152}

	result, err := htrutils.HistoricalRootsRoot(testHistoricalRoots)
	require.NoError(t, err)
	assert.Equal(t, expected, result)
}

func TestSlashingsRoot(t *testing.T) {
	testSlashingsRoot := []uint64{123, 234}
	expected := [32]byte{123, 0, 0, 0, 0, 0, 0, 0, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

	result, err := htrutils.SlashingsRoot(testSlashingsRoot)
	require.NoError(t, err)
	assert.Equal(t, expected, result)
}

var transactionFixtures = []string{
	"0xfe3dfa1bf22cf52158bf4350b043fe4a85f296553f00d3b7675f9c8e7e5ea16847d3f9d26383500cae3f2db618bee98d8145eb33e4f1e7e166498d306dec3878116c4c096f48070d5eb81f0d0fa40dc0cc12c375513dc554f7e418c16e11591cbe914fbaeb0e53ae9b74e56ecec2b66267ce143d86d7ad60cd073312f97c21c15feb29db2ebe6d82b8436b63fcb6f2dbe62414aac96132942e8c06fdca4d3575a7c0ed93561d8655e3e19f297719d9ecf1b590605cdee49bea62d644b2b606d32e7cf51f8ec02c7397ff6e8ce2282263ad3ae1c907059b6b21f6c7e4f614989d4c1a9ef0e478153a46c97a7e548e0698ab9dbb321c8646222bac9ab9efa08d13ed5726ef146fba480523d119561b8388d0a13f78d089e7497cb6d2170092b258497c6a74d055689286ffeb2b86ca437e40191cb2b4f3705a81524eba10f4a8fe88415f9709c521744e0970349614fbb55b001d4a2dd4e24d50dc2627f56c411022fc89626203d8d87c5db700f5858e3e6d058fa93996095aecda956fc625423b625a072d092768451ed078dbb35c639936abed4a043a1ac207164372840e8bf5ac8bacd3c0d256c37c2b823c6aa841482633ff9b9ac4a9aa1a55d168fa101098cd",
	//"0x9891bb74d37ac850744877870e15caa9d8b9caf0ff9ea7fa95df3119f1671c63ab1fa397631205d3819a3a1b55732157a5b55616808c4f37b4c75f5b438289433db166a15aca7e7ee2e7cd3016796e474a39799005a221fdc834f446c7192af85a179a9e0c4711d104b188ac8505387b1f7dd8140bd2e768e6cbe315b2a4f035547be8e4dc14bee3f55276c7828605a0f3309191f82b61a597e74958919c4c6fa21ee94d81d7a1cbeea996cffc58bb663902bc84e17e6c1f1f7ec229995024611fad7a185ecf413b3883129f9b812be1ad4e4f5da9c41a3cd242b5f5232ceea0b6e0c2e148dd3ea840756a9c99763e3af3854a43626255f30b4cfbadd0b6f2b9e43f40dfb0f57631ce87a7df7be145ac81e204734640a1427a8942de03f0ea60ab117574c074acc3305e255fd02db5e840009a087e069a993af856800bad948d6f0df03422d571d04b6a3d902c08ca4a11a877efccee2c4e6144e9bb58bcc37a6c3bf51628fbc6ec28cc168b7af86208d084d73c3d61c2783bdc25c11b32713aaca21c4036d2520ce0ca4a3667b40fcaad6ac4805aaf902894812ad84f2c0b84e179ab247a68f24266608810e47ad8273e5576ba68b04d774b0b3fd4c59e83b23fd99d9e64a724755172505d85ec1ffd02845d947ca034b09a4cd04159707bded487463b60f01d5274a7f84dc2e6f350c6868f95836e1efeef012fdbcfa4b09270729e7ca90c3a867f8abf057513300470b6b59c16f1d8d185c9177c468d01e4d7514190b736a96006a4cd2ca15f4146b667d94b083d7ef546b3822bb50c1b887c85f3c45f86f7074ddcc4b61057b063cbb1b7c61c3c54c390120054b35e028f16ec7ce8c111b3186c5c6497d08fca9074a2961fdd15a652cd7022bf72582c5b33a995d616e6de21c82d3e36943b3b7292e130eb085b6e659aa96d3bfe522e2ba60081f3c879405e0adc92d482307fab693c2a5ce19e756d6c969fcce708ebf1e66842710b2cacee3302d9ea32c95c513dc780fbdb22ca6d10b1fa3e81beb4454ae109b6fd837d796ee2599d8460a47f26ed91787ef56f25a85fecf040db0e46c7208b779010067c",
	//"0xbd5bd41197f867e37d7e345345f02938f3ebd0b17adc3551ae0fbf92b2dfa4aa69fe94eefb392d69ab3ecec131a6e6c0068391a5f9c5ab7527237509a549fda3c2e58773b2d06fcf19a47c28aab9954b2f5c5a06c77d1e2d1c4213fbd0c64824500cdb8deeae4f4b80913cb421cfae3e224af1d6614ae9524acde255b8ea422b0410ce20f9ec39b26361ef179fe88ebca56d050ce4476465bd86fa7a2288b4396130a9d15bd0ffba28412da1851d0a7ab79459bfe123e3f6e77bf7af2aaed7de915f878a696a761dc827f1338451f8543b3e6e961f5842d0be37a6cc962c7b47265fdb240645ff8cb3d60630e650a9051f4e0647b8797f043c7b97823dd123b2231bfa56585e4c2dba1900eb53f37f6d4714c8cf699020139b90f1068bdb08c278d977c3dd689022a7a6ff0e8af13f35d14ec58fe0a405aa6d50fb6c9bb6a5493727862d992cddb360c362886c56bfcb715e1ae987815a238997dc5bbf071383981d86b6e32003309b8e2000faeef17eb5f1f26bb422587d852da62280b5561b2a8dcc88ddc58ddd6cca2388e372bd3d8c14205be96526cd30f74c1ed4ce798aa1faef96609507cd9a60862f705a5f1482b29e5fd4e02eb012380ba78bfb96693a4fcf8147e42c8c2fee0202bdc97ea56a6aefb40659ec9502ce9a8c81ab6304b32f338f2f70d1412277eb055a9f97e091c8c766e6c36f3828baa33a32d733139ba911ba23243c5bbe66c781f8cf5bd33c5f0d474db426d076f8cd5b9731711ce24beaf1b1ddbbf4a60699ea730a6234c7227883172bcef68c9f7eb36473e064863283762f87677a952bdc144d2ec03ab0dff0a21d237b366b3fa34b9899496d5121fa90ecccdca6946fe883cb266fc988fa9d9de5133559547c5d61feaf29c04af22f1ea4cbe95f872188881aa5c612122f8aebe995e1eadd1b66680680933f0cb7cbbfe368251bd6953105dfa56fa25141bdc91868ec9cdfb25ad4f559d366d3aeed13488c1b9f6c1b5985e0c7f605088dc35752db62df999a9fdbff4493c6de3e5fb63ca229150532bd6a0e90e094e6841423cf8758",
	//"0xe7ccabf13b59748e56336ac561bcfb496fb1d63204ccca52863518ea008285e5ea28c54116393784687614bfa0ae00cd961e19270d925e906aec6e57c2b75669de4ccb4dab2630820a77d9cbc4efdf0b7bbf70e7e59e6460bfb60e59e10d0a4bb856007c05544fcec976727fe983631d69d53392e6c7060e6ddc4e5d0d6be10cab383ef23d1b8c5077f1c7c4b2895ad7758c030e978c8b493db5c44abbb2ecf4f904ec332fa2ca37341602d4e4e23a0e2ef819ba14f8a276912360c09307560ce359640a2cb1fdef533d5877d956a49f01eb0a0af00d433086963126fea300efc71f1440b1faf824d7ef6985fed81953d6d679c8ad8c503f31d1fc1b68fb9c896dae28149ab8b537099db89581c4366cd4d52d0252b61c9fbccb00853f1c6c7907948829221f70a90ee1bef5b178bb3e073d3d25baa81c8cf1feacf9e2760b476abca51899d6505dc730b25933eb0853b017396a6eba24f70cc3a1f7dcea15d3bd84a56dd4731772fd5cee2d1d77165ca011da16625119e6f2802895228a57ee2d67aa2010bdf2715c921f8a85d5ba345f26b5120f59c20b6efc200eba74e722177fc593e1414f4a633861e005af12650bdc30b4c650794d004f58fcfa83757e34d4ad5bede7bfa7820094635e291bd9343c20b66866a8f303c62f90d5c71768966badb9afd05dd8062c01dc56982d8bfe8a6b8971433f9c4d8b3bba492d51ef705fff9f9878eff86d4bbe0231bfdd715298c8ba22a45656d48dac9397c2dcd27681c52e7ff70860d031d4cbc03d79db39d26f54d67afaf13fccad48d52ea7bb3f301828470d1331c7ac6e3deb1bf9814fb94bc9d229c4b58766b820bee263c4759e18966bb5740a001f1944bb6c4f3030188359fad0604a243277ffb5c407aa54a8f9f7703906c1d34f64b86702b0710d4ce52d0c8ae004eda20a7284ceaca1955c225b2a75bf0e006537bcfadd25173624de886c2416255ae04d818be1768dd658ce7a124977177924f56ed2e61cc030d4be15ec4eb18e5b67a2c257692981f66ef017d5cc848f8f5e7fb7c71c4ff251256b9499723711d3d321a617d2fdef00fb75cb438a9a4d7400a18686cfb8a0e33181cf8233441ba427b33832a2084ada16f782914cf8fce2087dd44e1375a99eadeb8ab89406f6aabd21909dcddb2b6f84934c5eaed6a076c31de4d386250502d180ed8dcb15be0ae90e8dc3069c8c99d6161ef00760f2acdce5c60982362b",
	//"0xdc03ccc219d2ff1072706ae9f8aea029261f3b32111827c77214b00b254a9fe4b6f53d37ffe78d385fc55e70817cb4d11066c15ee1496e76a3ebd5140bf9f64c1f4e22516da33357f43de1061a851dc2f43d2714a60dd5330304263547ea51e2505abfee1b2a58781a72bc3734b9b7d0e0ed5691f496a4d272920eca928af89f6c3dac33b7c6f4b1632cf3a3c01aa9b584819a38491eefe84aa7705b196b9c624e7f5b4d9640e6",
	//"0xffc0d2f3d32636c19a73af933a92d2fdffbd83287aae1827a5e6bde3e6cbb1cb406da52a7717e3b283b72fe852b280ff7a7de2d75caf02739a66149d1dbe964db70d127bbbc6d1c935718e5d1fd8b4af0c347c3b6e8f681eead96d6402bb88c53c7e03bd72aeb03d3e50359e553f5cfc458b2281e6ed772a693a2b305b55bcfd97e1838c99b9bb9262d7fd4885ea7386dbb5e73756294ce4391001fe1da73b94f17486851508ec6b039137d4f9f55aa2f2ba3618e3bf9c2c76c6d9f4bf9ceec730824176c0ba232035d7630615b14f3982cbb433c85cc2a354c0251f95a8826ef6d716dc6ab8961bf79869ea47608a1382ff2d5d5498cd34386897e9b9d3aef95d43c8294c96e9364c70f19ede7bad95c011155317cef839488fad1b43abd181cee7b452ef709de79412f296e4269085984647dc1a8662eff7edb8af0a6b525fee4c15f52a0067392f8dea8ed1e885546499637d42048c0ab42adc4d0ecb0e45154e4f87f62933c30089fc7d4063d41ed6cc0b931cb453fd7ce95d5532d9c3c90702dae71eadec5425a17868272355eff282ccf75b61b335abc65e0979f853f182ec4204f5d0042d209f71eb228924520d34990c8430ea94c65b0b9f65af5bc597d3efd1a91a03770ac71b872535bf8f7e263ce3275b59ec8cb9ea9b45b980a19911b5ca6110550934959452fe39cdf7956ff0a14d32e73b3085ac0053b0abd4b350f2d9b6dbc0937a8a1dd1be4b82f6d24de0b1f704e040e53ffb170a86b10eb5ee51d53515af04660b5e537eca6a2df855fe4e1c6198394926c1bbfd9dce0ddadd00ff06349a93a5df98ce54246beb08f3711cc8146eb3c01a5062c97be5b61ef9ebe7e32202cbddf73816ba6b12c78106d623303c5cd03cfb5ba94c31981691809fab3f1646d61c1276aa5d5799f8fd298b37bee8e5f4b0a00c02e2ca33",
	//"0x06ce48bc94ace916021e27577ef5d733cb473128548ee7f0660c3c0e677d3c785f7bec035ce1609ad2c2617243a8fc0209560c1a8b603a2cfb",
	//"0xf8475fe4785c7746ca414fa5001025ea297e610fe1ad43a1fca3bf8aba5685696a9fca05332f5d6c88057d94172bf6915d55cf11b9e1cd29c1dcca753eabf9b3b22475620dd388927e53399b01f226309e4fe441431f346c4b428050be64dedc7daffcc05ec1a2789be610b56f046d9ce5e9573b38b47221ce6124cfd456e94a76f1278948307aafa0ed851caa7e13a4b57c34f5a708213d2bf1415aeffc4c3daefe0ac02672110cb8fa960867d51972dfb2d76a876cde5a4d03f31e850d99c38b997a6e4d2319da8e1ceb8c138df7f22167ad6aff2859fc42a157b2703ab65173535e0181b44d2c66d46fd8687d969dc5ff76ebd1790ca608644a",
	//"0x4a963854a620ca3fa3329497530afc05bde256b75f02191e050cf8de6fde2a642c8c59cb0c06c0ea0d5c2eedad5014ad383c297dcfa4726a80e81642ef387539750b5f680b7ac67161edf6147591649752712384fa4c218103d2d0e857bc8da2bb90924245fc48cf796905a711af836a38b93f009071865f7354ab3e71a5a6123f5768b28f3cac46f742299671679af5c1bcc57e661295189b82ca699e35ab7b729e041fdf4e570916097292407a28220ce0554f87fd24085af3090bb3b504608f260b93981bc836412f4711303d486a40f18491f579c2c4d0db3600378bb4183c22134b731eb7aa712e1f7b2f4d1ab322cf9f21d57da7f7b6bee4915e2fe924c690f631d6ed9f2eb346d28bf10760bbb20180d7561ca6c506cd6c77782a4dd17f527e33fc940e85bbcced168c86df42596d78f5c535c8f6f5929673985a50a7f27e9a92c8f88047f9305b10d6b4a6e1ff35901ccf2ce7575c4fe8be76223c96a7c6697dafb6baf5f2c47d6f420a6d6addc217470266a6bdd64edf05bc74982f835e6f2be484ea2e2938d7c99848ccf94117ffea0c7a451e819d46c7db1601661536045c9400211f41017215fe24f201f5c6fc72277e685e1ff908f4c6cee0aa6ceacfeed32fbfd132a075f7e8bb68a779e0ea428b1d11e092e8fab5b818d4d2e4476afab72d73d0bf40f389daee9e529099466473ce40149f4d4df74748582423eabdffa8ac84fe787da688446ed1798c0caaacccd2339027f2ec68dabe760224603fd72e63bb92566e93b7c3b2cdb642223edfd17854d80d9c353953c0388bad1a505c37881306b68c0cd2d0844c15e502952c8ce1682a3e69f010709aa0a2773c6aa75f4f7ec7279775a8068bd941d19803cac50703e185cd6cd9621df5c2e33e302983d818d1adfce6b4e5818d6722b21e5aeda44eeec7107ee421dbbfbe4610270605a8592ac1fc717e3e05f0e70ca5aa578ad7742cc6c5cdb841c94d65489ea69241225617d8c15c984d7788bcb953b4d0d5572162663de07d065e7d3424877dbe4b6346861a90f2735614df211290c458254d983983b65334baa7991604abc8587d9d386f4d011a44abde134aae48d82f4b448b09d1b70cf73c0911e847264568b00d23443793607a4cda76fae11c3ca46973d724b33946fec8511bde65276a364bd7d3c08b",
}
